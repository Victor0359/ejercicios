<body>
  <form id="FormEditar" action="/recibo_inq_impreso" method="GET" class="row">
    <input
      type="hidden"
      id="numrecibo"
      name="numrecibo"
      value="<%= recibo.numrecibo %>"
    />
    <input type="hidden" name="letra" value="<%= letra %>" />

    <div class="receipt-container">
      <!-- <div class="paid-stamp">PAGADO</div> -->
      <div class="receipt-header">
        <h1>RECIBO DE COBRO</h1>
      </div>

      <div class="receipt-details">
        <div class="right">
          <p>
            <strong>Fecha:</strong>
            <%= fechaActual %>
          </p>
        </div>
      </div>
      <div class="receipt-details1">
        <div class="left">
          <p>
            <strong>Recibo N췈:</strong>
            <span id="receiptNumber"> <%= recibo.numrecibo %> </span>
          </p>
        </div>

        <div class="right">
          <p>
            <strong>Mes Cont:</strong>
            <span id="ownerName"> <%= recibo.cuota %> </span>
          </p>
        </div>
      </div>

      <div class="receipt-item">
        <p>
          <strong>Recib칤 de:</strong>
          <span id="apellidoinquilino"> <%= recibo.apellidoinquilino %> </span>
          la suma de pesos <%= letra %>, ($ <%=
          Number(recibo.total).toLocaleString("es-AR", {minimumFractionDigits:
          2}) %> ) en concepto de pago de la locacion correspondiente a la
          propiedad ubicada en la localidad de <%= propiedades.localidad %>, con
          frente a la calle <%= propiedades.direccion %>, mes de <%=
          mes_contrato %> con vencimiento el dia <%= vencimiento %> de <%=
          mes_contrato %>.
        </p>
      </div>
      <div class="form-row">
        <label for="mensualidad" class="form-label">Mensualidad</label>
        <span>$</span>
        <input
          type="text"
          name="mensualidad"
          value="<%= recibo.importemensual %>"
        />
      </div>
      <div class="form-row">
        <label for="abl" class="form-label">ABL</label>
        <span>$</span>
        <input type="text" name="abl" value="<%= recibo.abl %>" />
      </div>
      <div class="form-row">
        <label for="aysa" class="form-label">AYSA</label>
        <span>$</span>
        <input type="text" name="aysa" value="<%= recibo.aysa %>" />
      </div>
      <div class="form-row">
        <label for="exp_comunes" class="form-label">EXPENSAS COMUNES</label>
        <span>$</span>
        <input
          type="text"
          name="exp_comunes"
          value="<%= recibo.expcomunes %>"
        />
      </div>
      <div class="form-row">
        <label for="seguro" class="form-label">SEGURO</label>
        <span>$</span>

        <input type="text" name="seguro" value="<%= recibo.seguro %>" />
      </div>
      <div class="form-row">
        <label for="varios" class="form-label">VARIOS</label>
        <span>$</span>
        <input type="text" name="varios" value="<%= recibo.varios %>" />
      </div>

      <div class="receipt-total">
        Total:
        <span
          >$<span id="totalAmount">
            <%= Number(recibo.total).toLocaleString("es-AR",
            {minimumFractionDigits: 2}) %>
          </span>
        </span>
      </div>

      <div class="receipt-signature">
        <div class="signature-line"></div>
        <p>Firma y Aclaraci칩n</p>
      </div>
    </div>

    <div class="button-container">
      <button type="button" id="btnImprimir" class="btn-imprimir">
        Imprimir Ahora
      </button>
      <button type="button" id="btnGuardar" class="btn-guardar">
        Guardar para Imprimir M치s Tarde
      </button>
      <button type="button" id="btnImprimirDia" class="btn-imprimir-dia">
        Imprimir Todos los Recibos del D칤a
      </button>
    </div>
  </form>
  <script>
    // 游댢 Funci칩n para obtener los datos del recibo
    const getReceiptData = () => ({
      numrecibo: document.querySelector('[name="numrecibo"]').value,
      fechaActual: new Date().toLocaleDateString("es-AR"),
      apellidoinquilino: document
        .getElementById("apellidoinquilino")
        .textContent.trim(),
      total: parseFloat(
        document
          .getElementById("totalAmount")
          .textContent.replace(/\./g, "")
          .replace(",", ".")
      ),
      importemensual: parseFloat(
        document.querySelector('[name="mensualidad"]').value
      ),
      letra: document.querySelector('[name="letra"]').value,

      abl: parseFloat(document.querySelector('[name="abl"]').value),
      aysa: parseFloat(document.querySelector('[name="aysa"]').value),
      expcomunes: parseFloat(
        document.querySelector('[name="exp_comunes"]').value
      ),
      seguro: parseFloat(document.querySelector('[name="seguro"]').value),
      varios: parseFloat(document.querySelector('[name="varios"]').value),
    });

    // 游빍 Validaci칩n de los datos recibidos
    const validateData = (data) => {
      return (
        data.numrecibo &&
        data.apellidoinquilino &&
        !isNaN(data.total) &&
        !Object.values(data).some((val) => val === undefined || val === null)
      );
    };

    // 游닋 Env칤o de solicitud y manejo de errores
    const handleRequest = async (endpoint, successMsg, btn) => {
      btn.disabled = true;
      btn.textContent = "Procesando...";

      try {
        const data = getReceiptData();

        if (!validateData(data)) {
          throw new Error("Por favor complete todos los campos requeridos");
        }

        const response = await fetch(endpoint, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        const contentType = response.headers.get("content-type");

        if (!response.ok) {
          if (contentType && contentType.includes("application/json")) {
            const errorData = await response.json();
            throw new Error(
              errorData.message || "Error al procesar la solicitud"
            );
          } else {
            throw new Error("El servidor respondi칩 con contenido inesperado");
          }
        }

        alert(successMsg);
      } catch (error) {
        console.error("Error:", error);
        alert(error.message);
      } finally {
        btn.disabled = false;
        btn.textContent =
          endpoint === "/print-receipt"
            ? "Imprimir Ahora"
            : "Guardar para Imprimir M치s Tarde";
      }
    };

    // 游빗 Asignaci칩n de eventos al cargar la p치gina
    document.addEventListener("DOMContentLoaded", () => {
      document
        .getElementById("btnImprimir")
        .addEventListener("click", function () {
          handleRequest("/print-receipt", "Recibo impreso correctamente", this);
        });

      document
        .getElementById("btnGuardar")
        .addEventListener("click", function () {
          handleRequest("/save-receipt", "Recibo guardado exitosamente", this);
        });

      document
        .getElementById("btnImprimirDia")
        .addEventListener("click", async () => {
          try {
            const today = new Date().toISOString().split("T")[0];
            const response = await fetch(`/print-daily-receipts?date=${today}`);

            if (response.ok) {
              alert("Todos los recibos del d칤a enviados a impresi칩n");
            } else {
              throw new Error("Error al imprimir recibos del d칤a");
            }
          } catch (error) {
            console.error("Error:", error);
            alert("Error al imprimir los recibos del d칤a");
          }
        });
    });
  </script>

  <link rel="stylesheet" href="/css/recibo_imprimir.css" />
</body>
